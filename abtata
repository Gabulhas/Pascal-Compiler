Ast.Program ("multiple",
 [Ast.VariableDeclaration (Ast.Ident "numero", Ast.Simpletype Ast.TypeInteger);
  Ast.VariableDeclaration (Ast.Ident "x", Ast.Simpletype Ast.TypeInteger);
  Ast.VariableDeclaration (Ast.Ident "num", Ast.Simpletype Ast.TypeInteger);
  Ast.VariableDeclaration (Ast.Ident "intervalo",
   Ast.Simpletype Ast.TypeInteger)],
 [Ast.FunctionDeclaration (Ast.Ident "cebola",
   [Ast.VariableDeclaration (Ast.Ident "batata",
     Ast.Simpletype Ast.TypeInteger)],
   [Ast.VariableDeclaration (Ast.Ident "kek", Ast.Simpletype Ast.TypeInteger)],
   Ast.STMTBlock [Ast.STMTWrite [Ast.MiscExp (Ast.PString "hey")]],
   Ast.Simpletype Ast.TypeInteger);
  Ast.FunctionDeclaration (Ast.Ident "max",
   [Ast.VariableDeclaration (Ast.Ident "num1", Ast.Simpletype Ast.TypeInteger);
    Ast.VariableDeclaration (Ast.Ident "num2", Ast.Simpletype Ast.TypeInteger)],
   [Ast.VariableDeclaration (Ast.Ident "result",
     Ast.Simpletype Ast.TypeInteger)],
   Ast.STMTBlock
    [Ast.STMTAss (Ast.EntireVar (Ast.Ident "x"), Ast.ArithExp (Ast.Integer 4))],
   Ast.Simpletype Ast.TypeInteger)],
 Ast.STMTBlock
  [Ast.STMTWrite [Ast.MiscExp (Ast.PString "Digite um numero: ")];
   Ast.STMTRead (Ast.EntireVar (Ast.Ident "numero"));
   Ast.STMTIf (Ast.GE (Ast.NumVar (Ast.Ident "numero"), Ast.Integer 100),
    Ast.STMTBlock
     [Ast.STMTIf (Ast.LE (Ast.NumVar (Ast.Ident "numero"), Ast.Integer 200),
       Ast.STMTBlock
        [Ast.STMTWrite
          [Ast.MiscExp
            (Ast.PString "O numero esta no intervalo entre 100 e 200")]],
       Some
        (Ast.STMTBlock
          [Ast.STMTWrite
            [Ast.MiscExp
              (Ast.PString "O numero nao esta no intervalo entre 100 e 200")]]))],
    Some
     (Ast.STMTBlock
       [Ast.STMTFor (Ast.Ident "x", Ast.Integer 1, Ast.Integer 5,
         Ast.STMTBlock
          [Ast.STMTWrite
            [Ast.MiscExp
              (Ast.PString "O numero nao esta no intervalo entre 100 e 200")]])]));
   Ast.STMTIf
    (Ast.AND (Ast.LT (Ast.NumVar (Ast.Ident "numero"), Ast.Integer 4),
      Ast.NOT (Ast.GT (Ast.NumVar (Ast.Ident "numero"), Ast.Integer 9))),
    Ast.STMTAss (Ast.IndexedVar (Ast.Ident "intervalo", Ast.Integer 4),
     Ast.ArithExp (Ast.Integer 5)),
    Some
     (Ast.STMTWhile (Ast.GT (Ast.NumVar (Ast.Ident "numero"), Ast.Integer 5),
       Ast.STMTAss (Ast.IndexedVar (Ast.Ident "intervalo", Ast.Integer 4),
        Ast.ArithExp
         (Ast.SUB
           (Ast.SUM (Ast.MUL (Ast.Integer 5, Ast.Integer 5), Ast.Integer 8),
           Ast.Integer 1))))));
   Ast.STMTIf (Ast.GE (Ast.NumVar (Ast.Ident "numero"), Ast.Integer 100),
    Ast.STMTAss (Ast.EntireVar (Ast.Ident "x"), Ast.ArithExp (Ast.Integer 0)),
    None);
   Ast.STMTIf (Ast.GE (Ast.NumVar (Ast.Ident "numero"), Ast.Integer 991),
    Ast.STMTAss (Ast.EntireVar (Ast.Ident "x"), Ast.ArithExp (Ast.Integer 9)),
    Some
     (Ast.STMTAss (Ast.EntireVar (Ast.Ident "x"), Ast.ArithExp (Ast.Integer 1))));
   Ast.STMTWrite
    [Ast.ArithExp (Ast.NumVar (Ast.Ident "cebola"));
     Ast.ArithExp (Ast.SUM (Ast.Integer 4, Ast.Integer 1))];
   Ast.STMTWrite
    [Ast.BooleanExp (Ast.AND (Ast.BoolVar (Ast.Ident "numero"), Ast.B true))]])
